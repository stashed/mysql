/*
Copyright AppsCode Inc. and Contributors

Licensed under the AppsCode Community License 1.0.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    https://github.com/appscode/licenses/raw/1.0.0/AppsCode-Community-1.0.0.md

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package stash.appscode.dev.mysql.apis.installer.v1alpha1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

message ImageRef {
  optional string registry = 1;

  optional string repository = 2;

  optional string tag = 3;
}

message MySQLBackup {
  // +optional
  optional string args = 1;
}

message MySQLRestore {
  // +optional
  optional string args = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=stashmysqls,singular=stashmysql,categories={stash,appscode}
message StashMySQL {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional StashMySQLSpec spec = 2;
}

// StashMySQLList is a list of StashMySQLs
message StashMySQLList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of StashMySQL CRD objects
  repeated StashMySQL items = 2;
}

// StashMySQLSpec is the schema for Stash MySQL values file
message StashMySQLSpec {
  // +optional
  optional string nameOverride = 1;

  // +optional
  optional string fullnameOverride = 2;

  optional ImageRef image = 3;

  optional MySQLBackup backup = 4;

  optional MySQLRestore restore = 5;

  optional int64 waitTimeout = 6;
}

